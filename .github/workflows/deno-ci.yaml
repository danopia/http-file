name: CI

on:
  push:
    branches: [ main ]
  pull_request: {}

jobs:

  check:
    runs-on: ubuntu-latest
    name: Check w/ ${{ matrix.deno-version }}
    strategy:
      matrix:
        deno-version:
        - v2.5
        - canary
      fail-fast: false # run each branch to completion

    steps:
    - name: Checkout source
      uses: actions/checkout@v5

    - name: Use Deno ${{ matrix.deno-version }}
      uses: denoland/setup-deno@v2
      with:
        deno-version: ${{ matrix.deno-version }}

    - name: Cache Deno deps
      uses: actions/cache@v4
      with:
        path: ~/.cache/deno
        key: denodir/${{ matrix.deno-version }}-${{ hashFiles('deno.lock') }}

    - name: Run tests
      run: time deno test

    - name: Try out examples/get-client-info.http
      run: |
        src/compiler.ts examples/get-client-info.http
        deno check examples/get-client-info.http.ts
        examples/get-client-info.http.ts

    - name: Compile all examples
      run: |
        find . -name '*.http' -type f \
        | xargs -n1 src/compiler.ts
        deno check examples/*.http.ts

    - name: Try main examples directly
      run: |
        examples/get-client-info.http.ts

    - name: Try main examples with interpreter
      run: |
        src/interpreter.ts --file examples/get-client-info.http

  check-publish:
    runs-on: ubuntu-latest
    name: Check JSR

    steps:
    - uses: denoland/setup-deno@v2
    - uses: actions/checkout@v5

    - name: Cache Deno deps
      uses: actions/cache@v4
      with:
        path: ~/.cache/deno
        key: denodir-${{ hashFiles('deno.lock') }}

    - name: Check publish rules
      run: deno publish --dry-run --allow-dirty

  publish:
    runs-on: ubuntu-latest
    needs:
    - check
    - check-publish
    if: github.event_name == 'push'

    permissions:
      contents: read
      id-token: write

    steps:
    - uses: denoland/setup-deno@v2
    - uses: actions/checkout@v5

    - name: Cache Deno deps
      uses: actions/cache@v4
      with:
        path: ~/.cache/deno
        key: denodir-${{ hashFiles('deno.lock') }}

    - name: Publish now
      run: deno publish
